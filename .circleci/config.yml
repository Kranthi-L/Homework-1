version: 2.1

jobs:
  test:
    docker:
      - image: maven:3.8.6-openjdk-18
        environment:
          SONAR_TOKEN: 00904bc659b21e79fd23564d8cc08baa75f87b75
          SONAR_PROJECT_KEY: Kranthi-L_Homework-1
          SONAR_ORG: kranthi-l
    steps:
      - checkout
      - run:
          name: Run tests and Generate JaCoCo report
          command: mvn clean test jacoco:report verify
      - store_artifacts:
          path: target/jacoco-report
          destination: jacoco-report
      - run:
          name: Run SonarCloud analysis
          command: mvn sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORG -Dsonar.login=$SONAR_TOKEN

  build_and_push:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image
          command: |
            docker build -t kranthil/homework2:latest .
      - run:
          name: Push Docker Image to Docker Hub
          command: |
            docker login -u kranthil -p Docker@pwd1
            docker push kranthil/homework2:latest
workflows:
  version: 2
  test:
    jobs:
      - test
      - build_and_push:
          requires:
            - test

#
#version: 2.1
#
#executors:
#  java-executor:
#    docker:
#      - image: maven:3.8.6-openjdk-18  # Use Maven with OpenJDK 18 for Spring Boot
#    working_directory: ~/repo
#
#jobs:
#  test:
#    executor: java-executor
#    steps:
#      - checkout  # Checkout the code from the repo
#      - run:
#          name: Run tests with JaCoCo
#          command: mvn clean test jacoco:report  # Run tests and generate JaCoCo report
#      - run:
#          name: Run PMD Static Analysis
#          command: mvn pmd:check  # Run PMD static analysis
#      - run:
#          name: Run SonarQube Analysis
#          command: mvn sonar:sonar -Dsonar.host.url=https://sonarqube.example.com -Dsonar.login=$SONAR_TOKEN  # Run SonarQube analysis
#
#  docker-build-and-push:
#    docker:
#      - image: docker:20.10.7  # Use Docker image to build and push
#    steps:
#      - checkout
#      - setup_remote_docker:
#          version: 20.10.7
#          docker_layer_caching: true  # Enable caching for faster builds
#      - run:
#          name: Build Docker Image
#          command: |
#            docker build -t $DOCKER_USERNAME/myapp:$CIRCLE_SHA1 .  # Build Docker image
#      - run:
#          name: Push Docker Image to DockerHub
#          command: |
#            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin  # Login to DockerHub
#            docker push $DOCKER_USERNAME/myapp:$CIRCLE_SHA1  # Push image to DockerHub
#
#workflows:
#  version: 2
#  build:
#    jobs:
#      - test
#      - docker-build-and-push:
#          requires:
#            - test  # Only run this after tests pass
